generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Empresa {
  idEmpresa     Int            @id @default(autoincrement())
  nome          String?
  cnpj          String?
  telefone      String?
  maquinas      Maquina[]
  funcionarios  Funcionario[]
  enderecos     Endereco[]
}

model Maquina {
  id              Int                @id @default(autoincrement())
  numSerie        String?
  nome            String?
  modelo          String?
  local           String?
  descComponentes String?
  fkEmpresa       Int
  empresa         Empresa            @relation(fields: [fkEmpresa], references: [idEmpresa])
  especificacoes  Especificacoes[]
  historicos      Historico[]        // Adicionando relação inversa com Historico
}

model Funcionario {
  id         Int      @id @default(autoincrement())
  nome       String?
  email      String?
  senha      String?
  cpf        String?
  cargo      String?
  privilegio String?
  fkEmpresa  Int
  empresa    Empresa  @relation(fields: [fkEmpresa], references: [idEmpresa])
}

model Endereco {
  idEndereco Int      @id @default(autoincrement())
  logradouro String?
  cep        String?
  bairro     String
  numero     String?
  estado     String?
  fkEmpresa  Int
  empresa    Empresa  @relation(fields: [fkEmpresa], references: [idEmpresa], onDelete: Cascade)
}

model TipoComponente {
  idtipoComponente  Int               @id @default(autoincrement())
  nome              String?
  componentes       Componente[]
  especificacoes    Especificacoes[]  // Adicionando relação inversa com Especificacoes
  historicos        Historico[]       // Adicionando relação inversa com Historico
}

model Componente {
  idComponente     Int               @id @default(autoincrement())
  marca            String?
  compatibilidade  String?
  dataVencimento   String?
  fkTipoComponente Int
  tipoComponente   TipoComponente    @relation(fields: [fkTipoComponente], references: [idtipoComponente])
  especificacoes   Especificacoes[]
  historicos       Historico[]       // Adicionando relação inversa com Historico
}

model Especificacoes {
  idEspecificacoes  Int
  fkTipoComponente  Int
  fkMaquina         Int
  fkComponente      Int
  descricao         String?
  dadosEstaticos    String?
  unidadeMedida     String?
  maquina           Maquina          @relation(fields: [fkMaquina], references: [id])
  componente        Componente       @relation(fields: [fkComponente], references: [idComponente])
  tipoComponente    TipoComponente   @relation(fields: [fkTipoComponente], references: [idtipoComponente])
  @@id([idEspecificacoes, fkTipoComponente, fkMaquina, fkComponente])
  @@index([fkTipoComponente, fkMaquina, fkComponente], name: "idx_tipo_maquina_componente")
}

model Historico {
  idHistorico      Int              @id @default(autoincrement())
  fkTipoComponente Int
  fkMaquina        Int
  fkComponente     Int
  dataHora         DateTime?
  nome             String?
  leitura          String?
  unidadeMedida    String?
  maquina          Maquina          @relation(fields: [fkMaquina], references: [id])
  componente       Componente       @relation(fields: [fkComponente], references: [idComponente])
  tipoComponente   TipoComponente   @relation(fields: [fkTipoComponente], references: [idtipoComponente])
}


